name: Build GPDesk

on:
  push:
    branches: [ main, dev ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup MinGW
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-binutils

    - name: Build GPDesk
      shell: msys2 {0}
      run: |
        mkdir -p build/obj build/bin

        # Compile resource file
        windres gpdesk.rc -O coff -o build/obj/gpdesk.res

        # Compile and link
        gcc -o build/bin/gpdesk.exe -Iinclude \
          src/core/*.c src/input/*.c src/system/*.c src/config/*.c \
          build/obj/gpdesk.res \
          -lkernel32 -luser32 -lgdi32 -lcomctl32 -lole32 -loleaut32 \
          -luuid -lshell32 -ladvapi32 -lwinmm -lxinput -lpowrprof -ldxva2 \
          -DWIN32_LEAN_AND_MEAN -D_WIN32_WINNT=0x0601 -std=c17 -Wall

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: gpdesk-unsigned
        path: build/bin/gpdesk.exe
        if-no-files-found: error

    # This step will be enabled once SignPath is configured
    # - name: Submit to SignPath
    #   if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    #   uses: signpath/github-action-submit-signing-request@v1
    #   with:
    #     api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
    #     organization-id: '${{ secrets.SIGNPATH_ORGANIZATION_ID }}'
    #     project-slug: 'gpdesk'
    #     signing-policy-slug: 'release-signing'
    #     github-artifact-id: 'gpdesk-unsigned'
    #     wait-for-completion: true
    #     output-artifact-directory: 'build/bin/signed'

    - name: Create Release (on tag push)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: build/bin/gpdesk.exe
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
